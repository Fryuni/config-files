"$schema" = "https://starship.rs/config-schema.json"
add_newline = true
command_timeout = 500
continuation_prompt = "[‚àô](bright-black) "
format = "$all"
right_format = ""
scan_timeout = 30

[aws]
disabled = false
expiration_symbol = "X"
force_display = false
format = "on [$symbol($profile )(\\($region\\) )(\\[$duration\\])]($style)"
style = "bold yellow"
symbol = "ÓåΩ  "

[aws.profile_aliases]

[aws.region_aliases]

[azure]
disabled = true
format = "on [$symbol($subscription)]($style) "
style = "blue bold"
symbol = "Ô¥É "

[battery]
charging_symbol = "ÔñÉ "
disabled = false
discharging_symbol = "ÔñÇ "
empty_symbol = "Ôñç "
format = "[$symbol$percentage]($style) "
full_symbol = "Ôï∏ "
unknown_symbol = "Ôïº "

[[battery.display]]
style = "red bold"
threshold = 10

[buf]
detect_extensions = []
detect_files = ["buf.yaml", "buf.gen.yaml", "buf.work.yaml"]
detect_folders = []
disabled = false
format = "with [$symbol ($version)]($style)"
style = "bold blue"
symbol = "Ôíù "
version_format = "v${raw}"

[bun]
detect_extensions = []
detect_files = ["bun.lockb", "bunfig.toml"]
detect_folders = []
disabled = false
format = "via [$symbol($version )]($style)"
style = "bold red"
symbol = "üçû "
version_format = "v${raw}"

[c]
commands = [["cc", "--version"], ["gcc", "--version"], ["clang", "--version"]]
detect_extensions = ["c", "h"]
detect_files = []
detect_folders = []
disabled = false
format = "via [$symbol($version(-$name) )]($style)"
style = "149 bold"
symbol = "Óòû "
version_format = "v${raw}"

[character]
disabled = false
error_symbol = "[‚ùØ](bold red)"
format = "$symbol "
success_symbol = "[‚ùØ](bold green)"
vimcmd_replace_one_symbol = "[‚ùÆ](bold purple)"
vimcmd_replace_symbol = "[‚ùÆ](bold purple)"
vimcmd_symbol = "[‚ùÆ](bold green)"
vimcmd_visual_symbol = "[‚ùÆ](bold yellow)"

[cmake]
detect_extensions = []
detect_files = ["CMakeLists.txt", "CMakeCache.txt"]
detect_folders = []
disabled = false
format = "via [$symbol($version )]($style)"
style = "bold blue"
symbol = "‚ñ≥ "
version_format = "v${raw}"

[cmd_duration]
disabled = false
format = "took [$duration]($style) "
min_time = 2000
min_time_to_notify = 45000
show_milliseconds = false
show_notifications = false
style = "yellow bold"

[cobol]
detect_extensions = ["cbl", "cob", "CBL", "COB"]
detect_files = []
detect_folders = []
disabled = true
format = "via [$symbol($version )]($style)"
style = "bold blue"
symbol = "‚öôÔ∏è "
version_format = "v${raw}"

[conda]
disabled = false
format = "via [$symbol$environment]($style) "
ignore_base = true
style = "green bold"
symbol = "ÔÑå "
truncation_length = 1

[container]
disabled = true
format = "[$symbol \\[$name\\]]($style) "
style = "red bold dimmed"
symbol = "‚¨¢"

[crystal]
detect_extensions = ["cr"]
detect_files = ["shard.yml"]
detect_folders = []
disabled = false
format = "via [$symbol($version )]($style)"
style = "bold red"
symbol = "üîÆ "
version_format = "v${raw}"

[custom]

[daml]
detect_extensions = []
detect_files = ["daml.yaml"]
detect_folders = []
disabled = false
format = "via [$symbol($version )]($style)"
style = "bold cyan"
symbol = "Œõ "
version_format = "v${raw}"

[dart]
detect_extensions = ["dart"]
detect_files = ["pubspec.yaml", "pubspec.yml", "pubspec.lock"]
detect_folders = [".dart_tool"]
disabled = false
format = "via [$symbol($version )]($style)"
style = "bold blue"
symbol = "Óûò "
version_format = "v${raw}"

[deno]
detect_extensions = []
detect_files = ["mod.ts", "deps.ts", "mod.js", "deps.js"]
detect_folders = []
disabled = false
format = "via [$symbol($version )]($style)"
style = "green bold"
symbol = "ü¶ï "
version_format = "v${raw}"

[directory]
disabled = false
fish_style_pwd_dir_length = 0
format = "[$path]($style)[$read_only]($read_only_style) "
home_symbol = "~"
read_only = " Ô†Ω"
read_only_style = "red"
repo_root_format = "[$before_root_path]($style)[$repo_root]($repo_root_style)[$path]($style)[$read_only]($read_only_style) "
style = "cyan bold"
truncate_to_repo = true
truncation_length = 3
truncation_symbol = ".."
use_logical_path = true
use_os_path_sep = true

[directory.substitutions]

[docker_context]
detect_extensions = []
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
detect_folders = []
disabled = false
format = "via [$symbol$context]($style) "
only_with_files = true
style = "blue bold"
symbol = "Ôåà "

[dotnet]
detect_extensions = ["csproj", "fsproj", "xproj"]
detect_files = ["global.json", "project.json", "Directory.Build.props", "Directory.Build.targets", "Packages.props"]
detect_folders = []
disabled = true
format = "via [$symbol($version )(üéØ $tfm )]($style)"
heuristic = true
style = "blue bold"
symbol = ".NET "
version_format = "v${raw}"

[elixir]
detect_extensions = []
detect_files = ["mix.exs"]
detect_folders = []
disabled = false
format = "via [$symbol($version \\(OTP $otp_version\\) )]($style)"
style = "bold purple"
symbol = "Óâµ "
version_format = "v${raw}"

[elm]
detect_extensions = ["elm"]
detect_files = ["elm.json", "elm-package.json", ".elm-version"]
detect_folders = ["elm-stuff"]
disabled = false
format = "via [$symbol($version )]($style)"
style = "cyan bold"
symbol = "Óò¨ "
version_format = "v${raw}"

[env_var]

[erlang]
detect_extensions = []
detect_files = ["rebar.config", "erlang.mk"]
detect_folders = []
disabled = false
format = "via [$symbol($version )]($style)"
style = "bold red"
symbol = "Óû± "
version_format = "v${raw}"

[fill]
disabled = false
style = "bold black"
symbol = "."

[gcloud]
disabled = false
format = "on [$symbol$active(\\($region\\))]($style) "
style = "bold blue"
symbol = "‚òÅÔ∏è  "

[gcloud.project_aliases]

[gcloud.region_aliases]
southamerica-east1 = "BR"
us-east1 = "US_SC"
us-central1 = "US_IW"

[git_branch]
always_show_remote = false
disabled = false
format = "on [$symbol$branch]($style)(:[$remote]($style)) "
ignore_branches = []
only_attached = false
style = "bold purple"
symbol = "Ôêò "
truncation_length = 9223372036854775807
truncation_symbol = "‚Ä¶"

[git_commit]
commit_hash_length = 7
disabled = true
format = "[\\($hash$tag\\)]($style) "
only_detached = true
style = "green bold"
tag_disabled = true
tag_max_candidates = 0
tag_symbol = " üè∑  "

[git_metrics]
added_style = "bold green"
deleted_style = "bold red"
disabled = true
format = "([+$added]($added_style) )([-$deleted]($deleted_style) )"
only_nonzero_diffs = true

[git_state]
am = "AM"
am_or_rebase = "AM/REBASE"
bisect = "BISECTING"
cherry_pick = "CHERRY-PICKING"
disabled = false
format = "\\([$state( $progress_current/$progress_total)]($style)\\) "
merge = "MERGING"
rebase = "REBASING"
revert = "REVERTING"
style = "bold yellow"

[git_status]
ahead = "‚á°"
behind = "‚á£"
conflicted = "="
deleted = "‚úò"
disabled = false
diverged = "‚áï"
format = "([\\[$all_status$ahead_behind\\]]($style) )"
ignore_submodules = false
modified = "!"
renamed = "¬ª"
staged = "+"
stashed = "\\$"
style = "red bold"
untracked = "?"
up_to_date = ""

[golang]
detect_extensions = ["go"]
detect_files = ["go.mod", "go.sum", "glide.yaml", "Gopkg.yml", "Gopkg.lock", ".go-version"]
detect_folders = ["Godeps"]
disabled = false
format = "via [$symbol($version )]($style)"
style = "bold cyan"
symbol = "Óòß "
version_format = "v${raw}"

[haskell]
detect_extensions = ["hs", "cabal", "hs-boot"]
detect_files = ["stack.yaml", "cabal.project"]
detect_folders = []
disabled = false
format = "via [$symbol($version )]($style)"
style = "bold purple"
symbol = "Óù∑ "
version_format = "v${raw}"

[helm]
detect_extensions = []
detect_files = ["helmfile.yaml", "Chart.yaml"]
detect_folders = []
disabled = false
format = "via [$symbol($version )]($style)"
style = "bold white"
symbol = "‚éà "
version_format = "v${raw}"

[hg_branch]
disabled = true
format = "on [$symbol$branch]($style) "
style = "bold purple"
symbol = "Ôêò "
truncation_length = 9223372036854775807
truncation_symbol = "‚Ä¶"

[hostname]
disabled = false
format = "[$hostname]($style) in "
ssh_only = true
ssh_symbol = "üåê "
style = "green dimmed bold"
trim_at = "."

[java]
detect_extensions = ["java", "class", "jar", "gradle", "clj", "cljc"]
detect_files = ["pom.xml", "build.gradle.kts", "build.sbt", ".java-version", "deps.edn", "project.clj", "build.boot"]
detect_folders = []
disabled = false
format = "via [$symbol($version )]($style)"
style = "red dimmed"
symbol = "Óâñ "
version_format = "v${raw}"

[jobs]
disabled = false
format = "[$symbol$number]($style) "
number_threshold = 2
style = "bold blue"
symbol = "‚ú¶"
symbol_threshold = 1
threshold = 1

[julia]
detect_extensions = ["jl"]
detect_files = ["Project.toml", "Manifest.toml"]
detect_folders = []
disabled = false
format = "via [$symbol($version )]($style)"
style = "bold purple"
symbol = "Óò§ "
version_format = "v${raw}"

[kotlin]
detect_extensions = ["kt", "kts"]
detect_files = []
detect_folders = []
disabled = false
format = "via [$symbol($version )]($style)"
kotlin_binary = "kotlin"
style = "bold blue"
symbol = "üÖ∫ "
version_format = "v${raw}"

[kubernetes]
detect_extensions = []
detect_files = []
detect_folders = []
disabled = true
format = "[$symbol$context( \\($namespace\\))]($style) in "
style = "cyan bold"
symbol = "‚ò∏ "

[[kubernetes.contexts]]
context_pattern = "gke_(?P<project>[\\w-]+).*_(?P<cluster>[\\w-]+)"
context_alias = "gke-$cluster-$project"

[line_break]
disabled = false

[localip]
disabled = true
format = "[$localipv4]($style) "
ssh_only = true
style = "yellow bold"

[lua]
detect_extensions = ["lua"]
detect_files = [".lua-version"]
detect_folders = ["lua"]
disabled = false
format = "via [$symbol($version )]($style)"
lua_binary = "lua"
style = "bold blue"
symbol = "üåô "
version_format = "v${raw}"

[memory_usage]
disabled = true
format = "via $symbol[$ram( | $swap)]($style) "
style = "white bold dimmed"
symbol = "Ô°ö "
threshold = 75

[nim]
detect_extensions = ["nim", "nims", "nimble"]
detect_files = ["nim.cfg"]
detect_folders = []
disabled = false
format = "via [$symbol($version )]($style)"
style = "yellow bold"
symbol = "Ôö§ "
version_format = "v${raw}"

[nix_shell]
disabled = false
format = "via [$symbol$state( \\($name\\))]($style) "
impure_msg = "impure"
pure_msg = "pure"
style = "bold blue"
symbol = "Ôãú "

[nodejs]
detect_extensions = ["js", "mjs", "cjs", "ts"]
detect_files = ["package.json", ".node-version", ".nvmrc"]
detect_folders = ["node_modules"]
disabled = false
format = "via [$symbol($version )]($style)"
not_capable_style = "bold red"
style = "bold green"
symbol = "Óúò "
version_format = "v${raw}"

[ocaml]
detect_extensions = ["opam", "ml", "mli", "re", "rei"]
detect_files = ["dune", "dune-project", "jbuild", "jbuild-ignore", ".merlin"]
detect_folders = ["_opam", "esy.lock"]
disabled = false
format = "via [$symbol($version )(\\($switch_indicator$switch_name\\) )]($style)"
global_switch_indicator = ""
local_switch_indicator = "*"
style = "bold yellow"
symbol = "üê´ "
version_format = "v${raw}"

[openstack]
disabled = false
format = "on [$symbol$cloud(\\($project\\))]($style) "
style = "bold yellow"
symbol = "‚òÅÔ∏è  "

[package]
disabled = false
display_private = false
format = "is [$symbol$version]($style) "
style = "208 bold"
symbol = "Ô£ñ "
version_format = "v${raw}"

[perl]
detect_extensions = ["pl", "pm", "pod"]
detect_files = ["Makefile.PL", "Build.PL", "cpanfile", "cpanfile.snapshot", "META.json", "META.yml", ".perl-version"]
detect_folders = []
disabled = false
format = "via [$symbol($version )]($style)"
style = "149 bold"
symbol = "üê™ "
version_format = "v${raw}"

[php]
detect_extensions = ["php"]
detect_files = ["composer.json", ".php-version"]
detect_folders = []
disabled = false
format = "via [$symbol($version )]($style)"
style = "147 bold"
symbol = "üêò "
version_format = "v${raw}"

[pulumi]
disabled = false
format = "via [$symbol($username@)$stack]($style) "
search_upwards = true
style = "bold 5"
symbol = "ÔÜ≤ "
version_format = "v${raw}"

[purescript]
detect_extensions = ["purs"]
detect_files = ["spago.dhall"]
detect_folders = []
disabled = false
format = "via [$symbol($version )]($style)"
style = "bold white"
symbol = "<=> "
version_format = "v${raw}"

[python]
detect_extensions = ["py"]
detect_files = ["requirements.txt", ".python-version", "pyproject.toml", "Pipfile", "tox.ini", "setup.py", "__init__.py"]
detect_folders = []
disabled = false
format = "via [${symbol}${pyenv_prefix}(${version} )(\\($virtualenv\\) )]($style)"
pyenv_prefix = "pyenv "
pyenv_version_name = false
python_binary = ["python", "python3", "python2"]
style = "yellow bold"
symbol = "Óàµ "
version_format = "v${raw}"

[raku]
detect_extensions = ["p6", "pm6", "pod6", "raku", "rakumod"]
detect_files = ["META6.json"]
detect_folders = []
disabled = false
format = "via [$symbol($version-$vm_version )]($style)"
style = "149 bold"
symbol = "ü¶ã "
version_format = "${raw}"

[red]
detect_extensions = ["red", "reds"]
detect_files = []
detect_folders = []
disabled = false
format = "via [$symbol($version )]($style)"
style = "red bold"
symbol = "üî∫ "
version_format = "v${raw}"

[rlang]
detect_extensions = ["R", "Rd", "Rmd", "Rproj", "Rsx"]
detect_files = [".Rprofile"]
detect_folders = [".Rproj.user"]
disabled = false
format = "via [$symbol($version )]($style)"
style = "blue bold"
symbol = "üìê "
version_format = "v${raw}"

[ruby]
detect_extensions = ["rb"]
detect_files = ["Gemfile", ".ruby-version"]
detect_folders = []
detect_variables = ["RUBY_VERSION", "RBENV_VERSION"]
disabled = false
format = "via [$symbol($version )]($style)"
style = "bold red"
symbol = "üíé "
version_format = "v${raw}"

[rust]
detect_extensions = ["rs"]
detect_files = ["Cargo.toml"]
detect_folders = []
disabled = false
format = "via [$symbol($version )]($style)"
style = "bold red"
symbol = "Óû® "
version_format = "v${raw}"

[scala]
detect_extensions = ["sbt", "scala"]
detect_files = [".scalaenv", ".sbtenv", "build.sbt"]
detect_folders = [".metals"]
disabled = true
format = "via [$symbol($version )]($style)"
style = "red bold"
symbol = "üÜÇ "
version_format = "v${raw}"

[shell]
bash_indicator = "bsh"
cmd_indicator = "cmd"
disabled = true
elvish_indicator = "esh"
fish_indicator = "fsh"
format = "$indicator "
ion_indicator = "ion"
nu_indicator = "nu"
powershell_indicator = "psh"
style = "white bold"
tcsh_indicator = "tsh"
unknown_indicator = ""
xonsh_indicator = "xsh"
zsh_indicator = "zsh"

[shlvl]
disabled = true
format = "[$symbol$shlvl]($style) "
repeat = false
style = "bold yellow"
symbol = "‚ÜïÔ∏è  "
threshold = 2

[singularity]
disabled = true
format = "[$symbol\\[$env\\]]($style) "
style = "blue bold dimmed"
symbol = ""

[spack]
disabled = true
format = "via [$symbol$environment]($style) "
style = "blue bold"
symbol = "üÖ¢ "
truncation_length = 1

[status]
disabled = true
format = "[$symbol$status]($style) "
map_symbol = false
not_executable_symbol = "üö´"
not_found_symbol = "üîç"
pipestatus = false
pipestatus_format = "\\[$pipestatus\\] => [$symbol$common_meaning$signal_name$maybe_int]($style)"
pipestatus_separator = "|"
recognize_signal_code = true
sigint_symbol = "üß±"
signal_symbol = "‚ö°"
style = "bold red"
success_symbol = "‚úîÔ∏è"
symbol = "‚úñ"

[sudo]
allow_windows = false
disabled = true
format = "[as $symbol]($style)"
style = "bold blue"
symbol = "üßô "

[swift]
detect_extensions = ["swift"]
detect_files = ["Package.swift"]
detect_folders = []
disabled = true
format = "via [$symbol($version )]($style)"
style = "bold 202"
symbol = "üê¶ "
version_format = "v${raw}"

[terraform]
detect_extensions = ["tf", "hcl"]
detect_files = []
detect_folders = [".terraform"]
disabled = false
format = "via [$symbol$workspace]($style) "
style = "bold 105"
symbol = "üí† "
version_format = "v${raw}"

[time]
disabled = true
format = "at [$time]($style) "
style = "bold yellow"
time_range = "-"
use_12hr = false
utc_time_offset = "local"

[username]
disabled = false
format = "[$user]($style) in "
show_always = false
style_root = "red bold"
style_user = "yellow bold"

[vagrant]
detect_extensions = []
detect_files = ["Vagrantfile"]
detect_folders = []
disabled = false
format = "via [$symbol($version )]($style)"
style = "cyan bold"
symbol = "‚ç± "
version_format = "v${raw}"

[vcsh]
disabled = false
format = "vcsh [$symbol$repo]($style) "
style = "bold yellow"
symbol = ""

[vlang]
detect_extensions = ["v"]
detect_files = ["v.mod", "vpkg.json", ".vpkg-lock.json"]
detect_folders = []
disabled = false
format = "via [$symbol($version )]($style)"
style = "blue bold"
symbol = "V "
version_format = "v${raw}"

[zig]
detect_extensions = ["zig"]
detect_files = []
detect_folders = []
disabled = false
format = "via [$symbol($version )]($style)"
style = "bold yellow"
symbol = "‚ÜØ "
version_format = "v${raw}"

